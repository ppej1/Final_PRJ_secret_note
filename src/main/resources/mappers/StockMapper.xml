<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.sesoc.secret.dao.StockMapper">

	<select id="subLoad" resultType="SubClassVO">
		select
			 *
		from
			SUBCLASS
		order by SCSERIALNUMBER asc
	</select>
	<select id="subSelect" resultType="SubClassVO" parameterType="String">
		select
			 *
		from
			SUBCLASS
		where
			SCSERIALNUMBER = #{scSerialNumber}
		
	</select>
	<select id="empLoad" resultType="Employee_VO">
		select
			 *
		from
			EMPLOYEE
		order by RANK asc
	</select>
	
	<select id="accLoad" resultType="AccountVO">
		select
			 *
		from
			ACCOUNT
		order by ACCOUNTNAME asc
	</select>
	
	<insert id="insertRec" parameterType="ReceiptVO">
		INSERT INTO RECEIPT
		(
		rSerialNumber,
		scSerialNumber,
		userid,
		rAmount,
		rDate,
		rComment,
		accountserial
		)
		VALUES
		(
		re_seq.nextval,
		#{scSerialNumber},
		#{userid},
		#{rAmount},
		sysdate,
		#{rComment},
		#{accountserial}
		)
	</insert>
	<select id="selectrSerial" resultType="String">
	select 
	    max(RSERIALNUMBER)
	from 
	    RECEIPT
	</select>
	
	<insert id="insertSt" parameterType="StockVO">
		INSERT INTO STOCK
		(
		sSerialNumber,
		scSerialNumber,
		RSERIALNUMBER,
		userid,
		sDate,
		deDate,
		SAMOUNT
		)
		VALUES
		(
		stock_seq.nextval,
		#{scSerialNumber},
		#{rSerialNumber},
		#{userid},
		sysdate,
		sysdate + #{deDate},
		#{sAmount}
		)
	</insert>
	<select id="selectStockAsLocation" parameterType="SubClassVO" resultType="StockInfoVO">
		select
			st.SCSERIALNUMBER,
			su.sname
			From Stock  st join subclass  su on St.SCSERIALNUMBER = su.SCSERIALNUMBER
			where
			 location = #{location}
			 group by st.SCSERIALNUMBER,su.sname
			 order by SCSERIALNUMBER
	</select>
	<select id="selectStockDetail" parameterType="StockInfoVO" resultType="StockDetailVO">
		 select
			 st.sSerialNumber,
			 su.sname,
			 st.SCSERIALNUMBER,
			 st.SAMOUNT,
			 re.RAMOUNT,
			 st.SDATE,
			 st.DEDATE,
			 su.UNIT,
			 mc.MCLASS
		 from
			 stock st join subclass su on St.SCSERIALNUMBER = su.SCSERIALNUMBER
			join  receipt re on St.RSERIALNUMBER =  re.RSERIALNUMBER
            join mainclass mc on su.MCSERIALNUMBER = mc.MCSERIALNUMBER
		 where
		 	 st.SCSERIALNUMBER = #{scSerialNumber}
             group by 			
             st.sSerialNumber,
			 su.sname,
			 st.SCSERIALNUMBER,
			 st.SAMOUNT,
			 re.RAMOUNT,
			 st.SDATE,
			 st.DEDATE,
			 su.UNIT,
			 mc.MCLASS
		 	 order by SCSERIALNUMBER
	</select>
	<select id="loadAllreceipt" resultType="ReceiptSubClassVO">
		 select
		 	 su.sname,
			 su.SCSERIALNUMBER,
			 re.rSerialNumber,
			 re.RAMOUNT,
			 re.rDate
		 from
			 receipt re join subclass su on re.SCSERIALNUMBER = su.SCSERIALNUMBER
            join mainclass mc on su.MCSERIALNUMBER = mc.MCSERIALNUMBER


	</select>		
	<select id="selectOnebyserial" parameterType="StockDetailNuturitionVO" resultType="StockDetailNuturitionVO">
	select
            su.SIMG,
            su.sname,
            st.sSerialNumber,
            st.SCSERIALNUMBER,
             mc.mcSerialNumber,
             st.USERID,
             mc.MCLASS,
			 st.SAMOUNT,
			 re.RAMOUNT,
             su.UNIT,
			 st.SDATE,
             re.rdate,
			 st.DEDATE,
             su.PRICE,
             su.location,
             su.foodcode,
             nu.ENERGY,
             nu.PROTEIN,
             nu.CARBON,
             nu.SUGAR,
             nu.NATRIUM,
             nu.CHOLE,
             nu.NUTRITIONSERIAL,
             ac.ACCOUNTNAME,
             re.RCOMMENT
		 from
			 stock st join subclass su on St.SCSERIALNUMBER = su.SCSERIALNUMBER
			join  receipt re on St.RSERIALNUMBER =  re.RSERIALNUMBER
            join mainclass mc on su.MCSERIALNUMBER = mc.MCSERIALNUMBER
            left outer join NUTURITIONDB nu on su.foodcode = nu.foodcode
            left outer join ACCOUNT ac on ac.ACCOUNTSERIAL = re.ACCOUNTSERIAL
         where sSerialNumber =#{sSerialNumber}
	</select>
	
	<select id="selectStockBySerial"  parameterType="StockVO" resultType="StockVO">
		select
			SSERIALNUMBER,
			USERID,
			SAMOUNT
		from
			STOCK
		where
			sSerialNumber = #{sSerialNumber}
	</select>
	<insert id="insertUses" parameterType="StockVO">
		insert into USES
		(
		USERIALNUMBER,
		SSERIALNUMBER,
		USERID,
		UDATE,
		UAMOUNT
		)
		values
		(
		use_seq.nextval,
		#{sSerialNumber},
		#{userid},
		sysdate,
		#{sAmount}
		)
	</insert>
	<insert id="insertDisposal" parameterType="StockVO">
		insert into DISPOSAL
		(
		DSERIALNUMBER,
		SSERIALNUMBER,
		USERID,
		DDATE,
		DAMOUNT
		)
		values
		(
		disposal_seq.nextval,
		#{sSerialNumber},
		#{userid},
		sysdate,
		#{sAmount}
		)
	</insert>	
	<update id="updateStock" parameterType="StockVO">
		update STOCK
		set
			USERID = #{userid},
			SDATE = sysdate,
			SAMOUNT = #{sAmount}
		where
		SSERIALNUMBER = #{sSerialNumber}
	</update>
	
</mapper>